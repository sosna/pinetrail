# Copyright (c) 2014, Xavier Sosnovsky <xso@sosna.ws>
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
# 
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
# INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
# OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.
#
Api.TrailFoundEvent.Trail.NotNull=A valid trail must be supplied.
Api.TourFoundEvent.Tour.NotNull=A valid tour must be supplied.
Api.TrailSummaryFoundEvent.Trail.NotNull=A valid trail summary must be supplied.
Api.TrailSummary.Name.NotBlank=A name must be supplied for the trail summary.
Api.TrailSummary.Countries.MinSize=There must be at least one country crossed by the trail.
Api.TrailSummary.Countries.EachNotNull=The code for the country must be a valid ISO 3166-1 two-letter country code (e.g.: DE for Germany). Got '${validatedValue}'.
Api.TrailSummary.Countries.EachPattern=The code for the country must be a valid ISO 3166-1 two-letter country code (e.g.: DE for Germany). Got '${validatedValue}'.
Api.TrailSummary.Rating.MinValue=The rating for the trail summary must be superior or equal to {value} stars. Got ${validatedValue}.
Api.TrailSummary.Rating.MaxValue=The rating for the trail summary must be inferior or equal to {value} stars. Got ${validatedValue}.
Api.TrailSummary.Id.NotNull=An identifier must be supplied for the trail represented by this trail summary.
Api.TrailSummary.Level.NotNull=A level must be supplied for this trail summary.
Api.TrailSummary.Acivity.NotNull=An activity must be supplied for this trail summary.
Api.TrailSummary.Date.NotNull=A date must be supplied for this trail summary.
Api.TrailSummary.Distance.NotNull=The distance must be supplied for this trail summary.
Api.TrailSummary.ElevationDifference.NotNull=The elevation difference must be supplied for this trail summary.
Api.TrailSummary.MovingSpeed.NotNull=The average moving speed must be supplied for this trail summary.
Model.Coordinates.Latitude.NotNull=Latitude must be supplied.
Model.Coordinates.Latitude.MinValue=Latitude must be superior or equal to {value} degrees. Got ${validatedValue}.
Model.Coordinates.Latitude.MaxValue=Latitude must be inferior or equal to {value} degrees. Got ${validatedValue}.
Model.Coordinates.Longitude.NotNull=Longitude must be supplied.
Model.Coordinates.Longitude.MinValue=Longitude must be superior or equal to {value} degrees. Got ${validatedValue}.
Model.Coordinates.Longitude.MaxValue=Longitude must be inferior to {value} degrees. Got ${validatedValue}.
Model.Coordinates.Elevation.MinValue=Elevation must be superior or equal to {value} meters. Got ${validatedValue}.
Model.Coordinates.Elevation.MaxValue=Elevation must be inferior or equal to {value} meters. Got ${validatedValue}.
Model.Link.Label.NotBlank=A label must be supplied for the link.
Model.Link.Location.NotNull=A location must be supplied for the link.
Model.Tour.Name.NotBlank=A name must be supplied for the tour.
Model.Tour.Trails.MinSize=There must be at least one trail in the tour.
Model.Waypoint.Coordinates.NotNull=The coordinates of the waypoint must be supplied.
Model.Waypoint.Time.NotNull=The time the waypoint was recorded must be supplied.
Model.Waypoint.Time.Past=The time the waypoint was recorded must be in the past. Got ${validatedValue}.
Model.Waypoint.Distance.Positive=The distance in meters between two points must be a positive value. Got ${validatedValue}.
Model.Waypoint.Speed.Positive=The speed with which the distance between two points was covered must be a positive value. Got ${validatedValue}.
Model.Waypoint.EleDiff.Positive=The difference in elevation between two points must be a positive value. Got ${validatedValue}.
Model.Waypoint.EleDiff.Max=The difference in elevation between two points must be below 9450 meters. Got ${validatedValue}.
Model.Waypoint.Grade.MinValue=Grade must be superior or equal to {value} percent. Got ${validatedValue}.
Model.Waypoint.Grade.MaxValue=Grade must be inferior or equal to {value} percent. Got ${validatedValue}.
Model.Trail.Name.NotBlank=A name must be supplied for the trail.
Model.Trail.Waypoints.MinSize=There must be at least one point recorded for the trail.
Model.Trail.Countries.MinSize=There must be at least one country crossed by the trail.
Model.Trail.Countries.EachNotNull=The code for the country must be a valid ISO 3166-1 two-letter country code (e.g.: DE for Germany). Got '${validatedValue}'.
Model.Trail.Countries.EachPattern=The code for the country must be a valid ISO 3166-1 two-letter country code (e.g.: DE for Germany). Got '${validatedValue}'.
Model.Trail.Rating.MinValue=The rating for the trail must be superior or equal to {value} stars. Got ${validatedValue}.
Model.Trail.Rating.MaxValue=The rating for the trail must be inferior or equal to {value} stars. Got ${validatedValue}.
Model.Trail.Id.NotNull=An identifier must be supplied for the trail.
